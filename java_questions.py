from database import create_tables, SessionLocal, Question


def add_java_questions():
    db = SessionLocal()
    try:
        # Проверяем, есть ли уже вопросы по Java в базе
        existing_questions = (
            db.query(Question)
            .filter(
                Question.level.like("junior_java%")
                | Question.level.like("middle_java%")
                | Question.level.like("senior_java%")
            )
            .count()
        )

        if existing_questions > 0:
            print(
                f"В базе уже есть {existing_questions} вопросов по Java. Пропускаем добавление."
            )
            return

        # Если вопросов нет, добавляем их
        # Junior level questions
        junior_questions = [
            {
                "level": "junior_java",
                "question_text": "Что такое JVM?",
                "option1": "Java Virtual Machine - виртуальная машина Java",
                "option2": "Java Visual Manager - визуальный менеджер Java",
                "option3": "Java Version Manager - менеджер версий Java",
                "option4": "Java Variable Method - метод переменных Java",
                "correct_option": 1,
            },
            {
                "level": "junior_java",
                "question_text": "Какой модификатор доступа является самым строгим в Java?",
                "option1": "public",
                "option2": "protected",
                "option3": "private",
                "option4": "default",
                "correct_option": 3,
            },
            {
                "level": "junior_java",
                "question_text": "Какой тип данных в Java используется для хранения целых чисел?",
                "option1": "float",
                "option2": "string",
                "option3": "double",
                "option4": "int",
                "correct_option": 4,
            },
            {
                "level": "junior_java",
                "question_text": "Что такое конструктор в Java?",
                "option1": "Метод, который вызывается при удалении объекта",
                "option2": "Метод для создания и инициализации объекта",
                "option3": "Метод для изменения значений полей класса",
                "option4": "Метод для преобразования типов данных",
                "correct_option": 2,
            },
            {
                "level": "junior_java",
                "question_text": "Какое ключевое слово используется для наследования в Java?",
                "option1": "implements",
                "option2": "inherits",
                "option3": "extends",
                "option4": "super",
                "correct_option": 3,
            },
            {
                "level": "junior_java",
                "question_text": "Что такое перегрузка методов (method overloading)?",
                "option1": "Изменение реализации метода в подклассе",
                "option2": "Создание нескольких методов с одинаковым именем, но разными параметрами",
                "option3": "Создание копии метода в том же классе",
                "option4": "Удаление существующего метода",
                "correct_option": 2,
            },
            {
                "level": "junior_java",
                "question_text": "Какой метод является точкой входа в Java-программу?",
                "option1": "run()",
                "option2": "start()",
                "option3": "execute()",
                "option4": "main()",
                "correct_option": 4,
            },
            {
                "level": "junior_java",
                "question_text": "Что такое package в Java?",
                "option1": "Архив с Java-файлами",
                "option2": "Механизм для организации классов в пространства имен",
                "option3": "Библиотека внешних зависимостей",
                "option4": "Инструмент для сборки проекта",
                "correct_option": 2,
            },
            {
                "level": "junior_java",
                "question_text": "Как объявить массив в Java?",
                "option1": "array[] int = new array(10)",
                "option2": "int array = new int[10]",
                "option3": "int[] array = new int[10]",
                "option4": "new array[10] = int[]",
                "correct_option": 3,
            },
            {
                "level": "junior_java",
                "question_text": "Что такое интерфейс в Java?",
                "option1": "Графический пользовательский интерфейс",
                "option2": "Абстрактный класс с реализацией методов",
                "option3": "Контракт, определяющий поведение класса",
                "option4": "Класс для работы с базой данных",
                "correct_option": 3,
            },
            {
                "level": "junior_java",
                "question_text": "Что такое переменная в Java?",
                "option1": "Значение, которое нельзя изменить",
                "option2": "Именованная область памяти для хранения данных",
                "option3": "Метод класса",
                "option4": "Тип данных",
                "correct_option": 2,
            },
            {
                "level": "junior_java",
                "question_text": "Какой цикл используется, когда количество итераций известно заранее?",
                "option1": "while",
                "option2": "do-while",
                "option3": "for",
                "option4": "foreach",
                "correct_option": 3,
            },
            {
                "level": "junior_java",
                "question_text": "Что такое String в Java?",
                "option1": "Примитивный тип данных",
                "option2": "Класс для работы с текстовыми данными",
                "option3": "Метод для преобразования типов",
                "option4": "Оператор сравнения",
                "correct_option": 2,
            },
            {
                "level": "junior_java",
                "question_text": "Как создать объект класса в Java?",
                "option1": "new Object();",
                "option2": "create Object();",
                "option3": "Object.create();",
                "option4": "make Object();",
                "correct_option": 1,
            },
            {
                "level": "junior_java",
                "question_text": "Что такое условный оператор if?",
                "option1": "Оператор цикла",
                "option2": "Оператор для проверки условия и выполнения кода",
                "option3": "Метод класса",
                "option4": "Тип данных",
                "correct_option": 2,
            },
            {
                "level": "junior_java",
                "question_text": "Как объявить константу в Java?",
                "option1": "const int number = 10;",
                "option2": "final int NUMBER = 10;",
                "option3": "static int number = 10;",
                "option4": "var number = 10;",
                "correct_option": 2,
            },
            {
                "level": "junior_java",
                "question_text": "Что такое комментарии в Java?",
                "option1": "Специальные команды для компилятора",
                "option2": "Пояснения к коду, игнорируемые компилятором",
                "option3": "Операторы ветвления",
                "option4": "Методы класса",
                "correct_option": 2,
            },
            {
                "level": "junior_java",
                "question_text": "Какой метод используется для чтения строки с клавиатуры?",
                "option1": "System.out.println()",
                "option2": "Scanner.nextLine()",
                "option3": "System.in.read()",
                "option4": "BufferedReader.read()",
                "correct_option": 2,
            },
            {
                "level": "junior_java",
                "question_text": "Что такое break в Java?",
                "option1": "Оператор для завершения программы",
                "option2": "Оператор для выхода из цикла или switch",
                "option3": "Оператор для создания объекта",
                "option4": "Оператор для вызова метода",
                "correct_option": 2,
            },
            {
                "level": "junior_java",
                "question_text": "Как преобразовать строку в число в Java?",
                "option1": "toString()",
                "option2": "Integer.parseInt()",
                "option3": "convert()",
                "option4": "toNumber()",
                "correct_option": 2,
            },
        ]

        # Middle level questions
        middle_questions = [
            {
                "level": "middle_java",
                "question_text": "Что такое многопоточность в Java?",
                "option1": "Выполнение нескольких задач одновременно",
                "option2": "Создание множества объектов",
                "option3": "Работа с несколькими файлами",
                "option4": "Использование нескольких циклов",
                "correct_option": 1,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое паттерн Singleton?",
                "option1": "Паттерн для создания множества объектов",
                "option2": "Паттерн, гарантирующий существование только одного экземпляра класса",
                "option3": "Паттерн для работы с базами данных",
                "option4": "Паттерн для обработки исключений",
                "correct_option": 2,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое коллекции в Java?",
                "option1": "Классы для работы с файлами",
                "option2": "Фреймворк для хранения и обработки групп объектов",
                "option3": "Методы для сортировки данных",
                "option4": "Интерфейсы для работы с базами данных",
                "correct_option": 4,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое Stream API в Java?",
                "option1": "API для работы с потоками ввода-вывода",
                "option2": "API для функционального программирования с коллекциями",
                "option3": "API для работы с многопоточностью",
                "option4": "API для работы с сетью",
                "correct_option": 3,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое лямбда-выражения в Java?",
                "option1": "Анонимные классы",
                "option2": "Короткая форма записи анонимных функций",
                "option3": "Операторы сравнения",
                "option4": "Методы интерфейсов",
                "correct_option": 1,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое Garbage Collection?",
                "option1": "Ручное управление памятью",
                "option2": "Автоматическое освобождение неиспользуемой памяти",
                "option3": "Очистка временных файлов",
                "option4": "Удаление неиспользуемых классов",
                "correct_option": 4,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое аннотации в Java?",
                "option1": "Комментарии в коде",
                "option2": "Метаданные для классов и методов",
                "option3": "Документация к проекту",
                "option4": "Системные сообщения",
                "correct_option": 3,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое Reflection API?",
                "option1": "API для работы с изображениями",
                "option2": "API для получения информации о классах во время выполнения",
                "option3": "API для логирования",
                "option4": "API для работы с сетью",
                "correct_option": 1,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое дженерики (Generics)?",
                "option1": "Общие методы для всех классов",
                "option2": "Механизм обобщенного программирования с типами",
                "option3": "Способ создания объектов",
                "option4": "Интерфейсы для коллекций",
                "correct_option": 4,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое сериализация в Java?",
                "option1": "Шифрование данных",
                "option2": "Преобразование объекта в последовательность байтов",
                "option3": "Сжатие файлов",
                "option4": "Копирование объектов",
                "correct_option": 3,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое Optional в Java?",
                "option1": "Обязательный параметр метода",
                "option2": "Контейнер для работы с null-значениями",
                "option3": "Тип данных для чисел",
                "option4": "Интерфейс для коллекций",
                "correct_option": 1,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое функциональные интерфейсы?",
                "option1": "Интерфейсы без методов",
                "option2": "Интерфейсы с одним абстрактным методом",
                "option3": "Интерфейсы для работы с функциями",
                "option4": "Интерфейсы с реализацией",
                "correct_option": 4,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое CompletableFuture?",
                "option1": "Синхронное выполнение кода",
                "option2": "Класс для асинхронного программирования",
                "option3": "Интерфейс для многопоточности",
                "option4": "Планировщик задач",
                "correct_option": 3,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое паттерн Factory Method?",
                "option1": "Метод для создания фабрик",
                "option2": "Паттерн для создания объектов без явного указания их классов",
                "option3": "Метод для работы с потоками",
                "option4": "Паттерн для работы с базами данных",
                "correct_option": 1,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое паттерн Observer?",
                "option1": "Паттерн для наблюдения за объектами",
                "option2": "Паттерн для оповещения объектов об изменениях",
                "option3": "Паттерн для создания объектов",
                "option4": "Паттерн для работы с потоками",
                "correct_option": 4,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое паттерн Strategy?",
                "option1": "Паттерн для создания стратегий",
                "option2": "Паттерн для определения семейства алгоритмов",
                "option3": "Паттерн для работы с данными",
                "option4": "Паттерн для создания объектов",
                "correct_option": 3,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое паттерн Decorator?",
                "option1": "Паттерн для украшения кода",
                "option2": "Паттерн для динамического добавления поведения объекту",
                "option3": "Паттерн для создания объектов",
                "option4": "Паттерн для работы с интерфейсами",
                "correct_option": 2,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое паттерн Adapter?",
                "option1": "Паттерн для адаптации кода",
                "option2": "Паттерн для преобразования интерфейса класса в другой интерфейс",
                "option3": "Паттерн для создания объектов",
                "option4": "Паттерн для работы с данными",
                "correct_option": 1,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое паттерн Command?",
                "option1": "Паттерн для создания команд",
                "option2": "Паттерн для инкапсуляции запроса в объект",
                "option3": "Паттерн для работы с данными",
                "option4": "Паттерн для создания объектов",
                "correct_option": 3,
            },
            {
                "level": "middle_java",
                "question_text": "Что такое паттерн State?",
                "option1": "Паттерн для работы с состояниями",
                "option2": "Паттерн для изменения поведения объекта при изменении его состояния",
                "option3": "Паттерн для создания объектов",
                "option4": "Паттерн для работы с данными",
                "correct_option": 4,
            },
        ]

        # Senior level questions
        senior_questions = [
            {
                "level": "senior_java",
                "question_text": "Что такое CompletableFuture в Java?",
                "option1": "Класс для работы с файлами",
                "option2": "Интерфейс для создания потоков",
                "option3": "Класс для асинхронного программирования",
                "option4": "Утилита для компиляции кода",
                "correct_option": 3,
            },
            {
                "level": "senior_java",
                "question_text": "Какой паттерн лучше использовать для создания сложных объектов?",
                "option1": "Singleton",
                "option2": "Factory",
                "option3": "Builder",
                "option4": "Prototype",
                "correct_option": 4,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое Spring Framework?",
                "option1": "Библиотека для работы с базами данных",
                "option2": "Фреймворк для создания веб-приложений",
                "option3": "Инструмент для сборки проектов",
                "option4": "Система контроля версий",
                "correct_option": 1,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое микросервисная архитектура?",
                "option1": "Способ оптимизации кода",
                "option2": "Архитектурный стиль, разделяющий приложение на небольшие независимые сервисы",
                "option3": "Метод тестирования приложений",
                "option4": "Паттерн проектирования",
                "correct_option": 3,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое Docker?",
                "option1": "Система управления базами данных",
                "option2": "Платформа для контейнеризации приложений",
                "option3": "Фреймворк для тестирования",
                "option4": "Система мониторинга",
                "correct_option": 4,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое Reactive Programming?",
                "option1": "Программирование игр",
                "option2": "Парадигма программирования, основанная на потоках данных и распространении изменений",
                "option3": "Работа с реляционными базами данных",
                "option4": "Создание пользовательских интерфейсов",
                "correct_option": 1,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое Apache Kafka?",
                "option1": "Web-сервер",
                "option2": "Распределенная система обмена сообщениями",
                "option3": "База данных",
                "option4": "Фреймворк для тестирования",
                "correct_option": 3,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое CI/CD?",
                "option1": "Система контроля версий",
                "option2": "Непрерывная интеграция и доставка/развертывание",
                "option3": "Фреймворк для разработки",
                "option4": "Система мониторинга",
                "correct_option": 4,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое OAuth 2.0?",
                "option1": "Протокол шифрования",
                "option2": "Протокол авторизации",
                "option3": "Формат данных",
                "option4": "База данных",
                "correct_option": 1,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое Event Sourcing?",
                "option1": "Система логирования",
                "option2": "Паттерн, при котором состояние приложения определяется последовательностью событий",
                "option3": "Механизм обработки исключений",
                "option4": "Способ хранения данных",
                "correct_option": 3,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое Service Mesh?",
                "option1": "Сетевой протокол",
                "option2": "Инфраструктурный слой для управления микросервисами",
                "option3": "База данных",
                "option4": "Система мониторинга",
                "correct_option": 4,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое CQRS?",
                "option1": "Система контроля версий",
                "option2": "Паттерн разделения операций чтения и записи",
                "option3": "Протокол передачи данных",
                "option4": "Формат данных",
                "correct_option": 1,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое DDD (Domain-Driven Design)?",
                "option1": "Система документации",
                "option2": "Подход к проектированию ПО, основанный на моделировании предметной области",
                "option3": "Фреймворк для тестирования",
                "option4": "Методология разработки",
                "correct_option": 3,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое Kubernetes?",
                "option1": "База данных",
                "option2": "Система оркестрации контейнеров",
                "option3": "Язык программирования",
                "option4": "Фреймворк для тестирования",
                "correct_option": 4,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое gRPC?",
                "option1": "Графическая библиотека",
                "option2": "Система удаленного вызова процедур",
                "option3": "База данных",
                "option4": "Протокол передачи файлов",
                "correct_option": 1,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое Istio?",
                "option1": "База данных",
                "option2": "Service mesh платформа для микросервисов",
                "option3": "Язык программирования",
                "option4": "Система мониторинга",
                "correct_option": 3,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое Elasticsearch?",
                "option1": "Web-сервер",
                "option2": "Распределенная поисковая система",
                "option3": "Фреймворк для тестирования",
                "option4": "Система контроля версий",
                "correct_option": 4,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое GraphQL?",
                "option1": "Графическая библиотека",
                "option2": "Язык запросов для API",
                "option3": "База данных",
                "option4": "Система мониторинга",
                "correct_option": 1,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое Chaos Engineering?",
                "option1": "Методология разработки",
                "option2": "Подход к тестированию устойчивости систем",
                "option3": "Система мониторинга",
                "option4": "Фреймворк для разработки",
                "correct_option": 3,
            },
            {
                "level": "senior_java",
                "question_text": "Что такое Terraform?",
                "option1": "База данных",
                "option2": "Инструмент для управления инфраструктурой как кодом",
                "option3": "Язык программирования",
                "option4": "Система мониторинга",
                "correct_option": 4,
            },
        ]

        # Добавляем вопросы в базу данных
        all_questions = junior_questions + middle_questions + senior_questions
        for q in all_questions:
            question = Question(**q)
            db.add(question)

        db.commit()
        print("\nБаза данных успешно заполнена вопросами!")

    finally:
        db.close()


if __name__ == "__main__":
    create_tables()
    add_java_questions()
